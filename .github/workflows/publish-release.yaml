name: Build, deploy and release prod
on:
    push:
        branches:
            - main

jobs:
    build-and-deploy:
        uses: ./.github/workflows/build-and-test.yml
        permissions:
            contents: read
            id-token: write
        with:
            environment: prod
            app_origin: 'https://www.nav.no'
        secrets:
            READER_TOKEN: ${{ secrets.READER_TOKEN }}

    publish:
        name: Publish to package registry
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write
        steps:
            - name: Checkout branch
              uses: actions/checkout@v2
            - name: Setup node.js
              uses: actions/setup-node@v2
              with:
                  node-version: 20
                  registry-url: 'https://npm.pkg.github.com'
                  cache: 'npm'
            - name: Bump version
              run: |
                  git config --global user.name '${{ github.actor }}'
                  git config --global user.email '${{ github.actor }}@users.noreply.github.com'
                  VERSION_TAG=$(npm version ${{ github.event.inputs.releaseType }} | grep -oP '\d+\.\d+\.\d+')
                  echo "VERSION_TAG=v${VERSION_TAG}" >> $GITHUB_ENV
            - name: Install dependencies
              run: npm ci
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN  }}
            - name: Build package
              run: npm run build
            - name: Run tests
              run: npm test
            - name: Publish package
              id: publish
              run: npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Push new version tag
              if: steps.publish.outcome == 'success'
              run: git push
            - name: Create release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ env.VERSION_TAG }}
                  body: ${{ github.event.inputs.releaseBody }}

    release:
        name: Create a new release
        needs: build-and-deploy
        runs-on: ubuntu-latest
        permissions:
            contents: write
            id-token: write
        steps:
            - name: Generate unique tag name
              run: echo "TAG_NAME=$(date +%s)" >> $GITHUB_ENV
            - name: Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  target_commitish: main
                  tag_name: release/prod@${{ env.TAG_NAME }} # Generates a unique tag using timestamp
                  name: Release ${{ github.ref_name }}
                  generate_release_notes: true
              env:
                  GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }} # This is a PAT with repo permissions
